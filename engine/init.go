package engine

func InitializeNewGame() (*State, error) {
	austria := &Country{Name: "Austria", HomeCenters: []string{"Vie", "Bud", "Tri"}}
	england := &Country{Name: "England", HomeCenters: []string{"Lon", "Edi", "Lvp"}}
	france := &Country{Name: "France", HomeCenters: []string{"Par", "Mar", "Bre"}}
	germany := &Country{Name: "Germany", HomeCenters: []string{"Ber", "Mun", "Kie"}}
	italy := &Country{Name: "Italy", HomeCenters: []string{"Rom", "Ven", "Nap"}}
	russia := &Country{Name: "Russia", HomeCenters: []string{"Mos", "Sev", "War", "Stp_sc"}}
	turkey := &Country{Name: "Turkey", HomeCenters: []string{"Ank", "Con", "Smy"}}

	game := &State{
		Turn:      Spring,
		Phase:     OrderPhase,
		Countries: [7]*Country{austria, england, france, germany, italy, russia, turkey},
		World:     initializeWorld(),
	}

	for _, c := range game.Countries {
		for _, hc := range c.HomeCenters {
			p, err := game.World.GetProvince(hc)
			if err != nil {
				return nil, err
			}

			p.OwnedBy = hc
		}
	}

	game.World.AddUnit(austria, Army, "Vie")
	game.World.AddUnit(austria, Army, "Bud")
	game.World.AddUnit(austria, Fleet, "Tri")

	game.World.AddUnit(england, Fleet, "Lon")
	game.World.AddUnit(england, Fleet, "Edi")
	game.World.AddUnit(england, Army, "Lvp")

	game.World.AddUnit(france, Army, "Par")
	game.World.AddUnit(france, Army, "Mas")
	game.World.AddUnit(france, Fleet, "Bre")

	game.World.AddUnit(germany, Army, "Ber")
	game.World.AddUnit(germany, Army, "Mun")
	game.World.AddUnit(germany, Fleet, "Kie")

	game.World.AddUnit(italy, Army, "Rom")
	game.World.AddUnit(italy, Army, "Ven")
	game.World.AddUnit(italy, Fleet, "Nap")

	game.World.AddUnit(russia, Army, "Mos")
	game.World.AddUnit(russia, Fleet, "Sev")
	game.World.AddUnit(russia, Army, "War")
	game.World.AddUnit(russia, Fleet, "Stp_sc")

	game.World.AddUnit(turkey, Fleet, "Ank")
	game.World.AddUnit(turkey, Army, "Con")
	game.World.AddUnit(turkey, Army, "Smy")

	return game, nil
}

func initializeWorld() *Graph {
	g := &Graph{Provinces: map[string]*Province{}}

	g.AddProvince("Boh", "Bohemia", LandTile, false)
	g.AddProvince("Bud", "Budapest", LandTile, true)
	g.AddProvince("Gal", "Galicia", LandTile, false)
	g.AddProvince("Tri", "Trieste", LandTile, true)
	g.AddProvince("Tyr", "Tyrolia", LandTile, false)
	g.AddProvince("Vie", "Vienna", LandTile, true)
	g.AddProvince("Cly", "Clyde", LandTile, false)
	g.AddProvince("Edi", "Edinburgh", LandTile, true)
	g.AddProvince("Lvp", "Liverpool", LandTile, true)
	g.AddProvince("Lon", "London", LandTile, true)
	g.AddProvince("Wal", "Wales", LandTile, false)
	g.AddProvince("Yor", "Yorkshire", LandTile, false)
	g.AddProvince("Bre", "Brest", LandTile, true)
	g.AddProvince("Bur", "Burgundy", LandTile, false)
	g.AddProvince("Gas", "Gascony", LandTile, false)
	g.AddProvince("Mar", "Marseilles", LandTile, true)
	g.AddProvince("Par", "Paris", LandTile, true)
	g.AddProvince("Pic", "Picardy", LandTile, false)
	g.AddProvince("Ber", "Berlin", LandTile, true)
	g.AddProvince("Kie", "Kiel", LandTile, true)
	g.AddProvince("Mun", "Munich", LandTile, true)
	g.AddProvince("Pru", "Prussia", LandTile, false)
	g.AddProvince("Ruh", "Ruhr", LandTile, false)
	g.AddProvince("Sil", "Silesia", LandTile, false)
	g.AddProvince("Apu", "Apulia", LandTile, false)
	g.AddProvince("Nap", "Naples", LandTile, true)
	g.AddProvince("Pie", "Piedmont", LandTile, false)
	g.AddProvince("Rom", "Rome", LandTile, true)
	g.AddProvince("Tus", "Tuscany", LandTile, false)
	g.AddProvince("Ven", "Venice", LandTile, true)
	g.AddProvince("Fin", "Finland", LandTile, false)
	g.AddProvince("Lvn", "Livonia", LandTile, false)
	g.AddProvince("Mos", "Moscow", LandTile, true)
	g.AddProvince("Sev", "Sevastopol", LandTile, true)
	g.AddProvince("Stp", "St. Petersburg", LandTile, true)
	g.AddProvince("Stp_nc", "St. Petersburg (NC)", WaterTile, false)
	g.AddProvince("Stp_sc", "St. Petersburg (SC)", WaterTile, false)
	g.AddProvince("Ukr", "Ukraine", LandTile, false)
	g.AddProvince("War", "Warsaw", LandTile, true)
	g.AddProvince("Ank", "Ankara", LandTile, true)
	g.AddProvince("Arm", "Armenia", LandTile, false)
	g.AddProvince("Con", "Constantinople", LandTile, true)
	g.AddProvince("Smy", "Smyrna", LandTile, true)
	g.AddProvince("Syr", "Syria", LandTile, false)
	g.AddProvince("Alb", "Albania", LandTile, false)
	g.AddProvince("Bel", "Belgium", LandTile, true)
	g.AddProvince("Bul", "Bulgaria", LandTile, true)
	g.AddProvince("Bul_ec", "Bulgaria (EC)", WaterTile, false)
	g.AddProvince("Bul_sc", "Bulgaria (SC)", WaterTile, false)
	g.AddProvince("Den", "Denmark", LandTile, true)
	g.AddProvince("Gre", "Greece", LandTile, true)
	g.AddProvince("Hol", "Holland", LandTile, true)
	g.AddProvince("Nwy", "Norway", LandTile, true)
	g.AddProvince("Naf", "North Africa", LandTile, false)
	g.AddProvince("Por", "Portugal", LandTile, true)
	g.AddProvince("Rum", "Rumania", LandTile, true)
	g.AddProvince("Ser", "Serbia", LandTile, true)
	g.AddProvince("Spa", "Spain", LandTile, true)
	g.AddProvince("Spa_nc", "Spain (NC)", WaterTile, false)
	g.AddProvince("Spa_sc", "Spain (SC)", WaterTile, false)
	g.AddProvince("Swe", "Sweden", LandTile, true)
	g.AddProvince("Tun", "Tunis", LandTile, true)
	g.AddProvince("ADR", "Adriatic Sea", WaterTile, false)
	g.AddProvince("AEG", "Aegean Sea", WaterTile, false)
	g.AddProvince("BAL", "Baltic Sea", WaterTile, false)
	g.AddProvince("BAR", "Barents Sea", WaterTile, false)
	g.AddProvince("BLA", "Black Sea", WaterTile, false)
	g.AddProvince("EAS", "Eastern Mediterranean", WaterTile, false)
	g.AddProvince("ENG", "English Channel", WaterTile, false)
	g.AddProvince("BOT", "Gulf of Bothnia", WaterTile, false)
	g.AddProvince("LYO", "Gulf of Lyon", WaterTile, false)
	g.AddProvince("HEL", "Helgoland Bight", WaterTile, false)
	g.AddProvince("ION", "Ionian Sea", WaterTile, false)
	g.AddProvince("IRI", "Irish Sea", WaterTile, false)
	g.AddProvince("MAO", "Mid-Atlantic Ocean", WaterTile, false)
	g.AddProvince("NAO", "North Atlantic Ocean", WaterTile, false)
	g.AddProvince("NTH", "North Sea", WaterTile, false)
	g.AddProvince("NWG", "Norwegian Sea", WaterTile, false)
	g.AddProvince("SKA", "Skagerrak", WaterTile, false)
	g.AddProvince("TYS", "Tyrrhenian Sea", WaterTile, false)
	g.AddProvince("WES", "Western Mediterranean", WaterTile, false)

	g.AddEdges("Boh", []string{"Mun", "Sil", "Gal", "Vie", "Tyr"})
	g.AddEdges("Bud", []string{"Vie", "Gal", "Rum", "Ser", "Tri"})
	g.AddEdges("Gal", []string{"Boh", "Sil", "War", "Ukr", "Rum", "Bud", "Vie"})
	g.AddEdges("Tri", []string{"Ven", "Tyr", "Vie", "Bud", "Ser", "Alb", "ADR"})
	g.AddEdges("Tyr", []string{"Mun", "Boh", "Vie", "Tri", "Ven", "Pie"})
	g.AddEdges("Vie", []string{"Tyr", "Boh", "Gal", "Bud", "Tri"})
	g.AddEdges("Cly", []string{"NAO", "NWG", "Lvp", "Edi"})
	g.AddEdges("Edi", []string{"Cly", "Lvp", "NTH", "NWG", "Yor"})
	g.AddEdges("Lvp", []string{"Cly", "Edi", "IRI", "NAO", "Wal", "Yor"})
	g.AddEdges("Lon", []string{"ENG", "NTH", "Wal", "Yor"})
	g.AddEdges("Wal", []string{"ENG", "IRI", "Lon", "Lvp", "Yor"})
	g.AddEdges("Yor", []string{"Edi", "Lon", "Lvp", "NTH", "Wal"})
	g.AddEdges("Bre", []string{"ENG", "Gas", "MAO", "Par", "Pic"})
	g.AddEdges("Bur", []string{"Bel", "Gas", "Mar", "Mun", "Par", "Pic", "Ruh"})
	g.AddEdges("Gas", []string{"Bre", "Bur", "MAO", "Mar", "Par", "Spa", "Spa_nc"})
	g.AddEdges("Mar", []string{"Bur", "Gas", "LYO", "Pie", "Spa", "Spa_sc"})
	g.AddEdges("Par", []string{"Bre", "Bur", "Gas", "Pic"})
	g.AddEdges("Pic", []string{"Bel", "Bre", "Bur", "ENG", "Par"})
	g.AddEdges("Ber", []string{"BAL", "Kie", "Mun", "Pru", "Sil"})
	g.AddEdges("Kie", []string{"BAL", "Ber", "Den", "HEL", "Hol", "Mun", "Ruh"})
	g.AddEdges("Mun", []string{"Ber", "Boh", "Bur", "Kie", "Ruh", "Sil", "Tyr"})
	g.AddEdges("Pru", []string{"BAL", "Ber", "Lvn", "Sil", "War"})
	g.AddEdges("Ruh", []string{"Bel", "Bur", "Hol", "Kie", "Mun"})
	g.AddEdges("Sil", []string{"Ber", "Boh", "Gal", "Mun", "Pru", "War"})
	g.AddEdges("Apu", []string{"ADR", "ION", "Nap", "Rom", "Ven"})
	g.AddEdges("Nap", []string{"Apu", "ION", "Rom", "TYS"})
	g.AddEdges("Pie", []string{"LYO", "Mar", "Tus", "Tyr", "Ven"})
	g.AddEdges("Rom", []string{"Apu", "Nap", "TYS", "Tus", "Ven"})
	g.AddEdges("Tus", []string{"LYO", "Pie", "Rom", "TYS", "Ven"})
	g.AddEdges("Ven", []string{"ADR", "Apu", "Pie", "Rom", "Tri", "Tus", "Tyr"})
	g.AddEdges("Fin", []string{"BOT", "Nwy", "Stp", "Swe"})
	g.AddEdges("Lvn", []string{"BAL", "BOT", "Mos", "Pru", "Stp", "Stp_sc", "War"})
	g.AddEdges("Mos", []string{"Lvn", "Sev", "Stp", "Ukr", "War"})
	g.AddEdges("Sev", []string{"Arm", "BLA", "Mos", "Rum", "Ukr"})
	g.AddEdges("Stp", []string{"Stp_nc", "Stp_sc", "Fin", "Lvn", "Mos", "Nwy"})
	g.AddEdges("Stp_nc", []string{"Stp", "BAR", "Nwy"})
	g.AddEdges("Stp_sc", []string{"Stp", "BOT", "Lvn"})
	g.AddEdges("Ukr", []string{"Gal", "Mos", "Rum", "Sev", "War"})
	g.AddEdges("War", []string{"Gal", "Lvn", "Mos", "Pru", "Sil", "Ukr"})
	g.AddEdges("Ank", []string{"Arm", "BLA", "Con", "Smy"})
	g.AddEdges("Arm", []string{"Ank", "BLA", "Sev", "Smy", "Syr"})
	g.AddEdges("Con", []string{"AEG", "Ank", "BLA", "Bul", "Smy"})
	g.AddEdges("Smy", []string{"AEG", "Ank", "Arm", "Con", "EAS", "Syr"})
	g.AddEdges("Syr", []string{"Arm", "EAS", "Smy"})
	g.AddEdges("Alb", []string{"ADR", "Gre", "ION", "Ser", "Tri"})
	g.AddEdges("Bel", []string{"Bur", "ENG", "Hol", "NTH", "Pic", "Ruh"})
	g.AddEdges("Bul", []string{"Bul_ec", "Bul_sc", "Con", "Gre", "Rum", "Ser"})
	g.AddEdges("Bul_ec", []string{"BLA", "Bul", "Con", "Rum"})
	g.AddEdges("Bul_sc", []string{"AEG", "Bul", "Con", "Gre"})
	g.AddEdges("Den", []string{"BAL", "HEL", "Kie", "NTH", "SKA", "Swe"})
	g.AddEdges("Gre", []string{"AEG", "Alb", "Bul", "Bul_sc", "ION", "Ser"})
	g.AddEdges("Hol", []string{"Bel", "HEL", "Kie", "NTH", "Ruh"})
	g.AddEdges("Nwy", []string{"BAR", "Fin", "NTH", "NWG", "SKA", "Stp", "Stp_nc", "Swe"})
	g.AddEdges("Naf", []string{"MAO", "Tun", "WES"})
	g.AddEdges("Por", []string{"MAO", "Spa", "Spa_nc"})
	g.AddEdges("Rum", []string{"BLA", "Bud", "Bul", "Bul_ec", "Gal", "Ser", "Sev", "Ukr"})
	g.AddEdges("Ser", []string{"Alb", "Bud", "Bul", "Gre", "Rum", "Tri"})
	g.AddEdges("Spa", []string{"Spa_nc", "Spa_sc", "Gas", "Mar", "Por"})
	g.AddEdges("Spa_nc", []string{"MAO", "Gas", "Por", "Spa"})
	g.AddEdges("Spa_sc", []string{"MAO", "WES", "LYO", "Mar", "Spa"})
	g.AddEdges("Swe", []string{"BAL", "BOT", "Den", "Fin", "Nwy", "SKA"})
	g.AddEdges("Tun", []string{"ION", "Naf", "TYS", "WES"})
	g.AddEdges("ADR", []string{"Alb", "Apu", "ION", "Tri", "Ven"})
	g.AddEdges("AEG", []string{"BLA", "Con", "EAS", "Gre", "ION", "Smy", "Bul_sc"})
	g.AddEdges("BAL", []string{"BOT", "Ber", "Den", "Kie", "Lvn", "Pru", "SKA", "Swe"})
	g.AddEdges("BAR", []string{"NWG", "Nwy", "Stp_nc"})
	g.AddEdges("BLA", []string{"AEG", "Ank", "Arm", "Con", "Rum", "Sev", "Bul_ec"})
	g.AddEdges("EAS", []string{"AEG", "ION", "Smy", "Syr"})
	g.AddEdges("ENG", []string{"Bel", "Bre", "IRI", "Lon", "MAO", "NTH", "Pic", "Wal"})
	g.AddEdges("BOT", []string{"BAL", "Fin", "Lvn", "Swe", "Stp_sc"})
	g.AddEdges("LYO", []string{"Mar", "Pie", "TYS", "Tus", "WES", "Spa_sc"})
	g.AddEdges("HEL", []string{"Den", "Hol", "Kie", "NTH"})
	g.AddEdges("ION", []string{"ADR", "AEG", "Alb", "Apu", "EAS", "Gre", "Nap", "TYS", "Tun"})
	g.AddEdges("IRI", []string{"ENG", "Lvp", "MAO", "NAO", "Wal"})
	g.AddEdges("MAO", []string{"Bre", "ENG", "Gas", "IRI", "NAO", "Naf", "Por", "WES", "Spa_nc"})
	g.AddEdges("NAO", []string{"Cly", "IRI", "Lvp", "MAO", "NWG"})
	g.AddEdges("NTH", []string{"Bel", "Den", "ENG", "Edi", "HEL", "Hol", "Lon", "NWG", "Nwy", "SKA", "Yor"})
	g.AddEdges("NWG", []string{"BAR", "Cly", "Edi", "NAO", "NTH", "Nwy"})
	g.AddEdges("SKA", []string{"BAL", "Den", "NTH", "Nwy", "Swe"})
	g.AddEdges("TYS", []string{"ION", "LYO", "Nap", "Rom", "Tun", "Tus", "WES"})
	g.AddEdges("WES", []string{"LYO", "MAO", "Naf", "TYS", "Tun", "Spa_sc"})

	return g
}
